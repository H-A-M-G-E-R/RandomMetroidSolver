For objective: use low byte of Special enemy properties ($0F86,x in enemy RAM)
=> make it an index in a table with extra data :
killed_event, enemy_type_ptr, room_enemies_ptr, ???

- killed_event is to be set when this enemy is killed.

- enemy_type_ptr leads to data relative to enemy *type* :
total_enemies, killed_ram_addr, all_killed_event

total_enemies: total number of this enemy type to kill
killed_ram_addr: RAM ptr to counter of enemies killed of this type so
far => increase counter only when setting killed_event
all_killed_event: event to set when all enemies of this type have been
killed.

- room_enemies_ptr points to a list of the "enemy kill events" in the
room, leading to another event to set if all said events are set.
=> useful to set events used by map icons: when all enemies are killed
in a room, the map icon disappears


However, the low byte of Special is not that unused. Refs of usage
in vanilla :
- $A38A06 : Metal Skree ($3)
- $A3B678 : Norfair slow fireball ($3)
- $A3C726 : Skree ($3)
- $A3CE07, $A3D2D4, $A3D37E : Maridia Snail ($3)
- $A3E068, $A3E69F : "creepy crawlies" (geemer/zoomer?) ($3)
=> this means we need an actually never used bit ($80) to tell whether the
other 7 are used as an index if we hook generic enemy death
(preferable), and we cannot have more than 128 special enemies like
that.

Hook generic enemy death: $A0A3AF ?



